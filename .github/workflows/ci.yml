name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 'Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Run Tests
        run: yarn test

  floating:
    name: 'Floating Dependencies'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: yarn
      - name: Install Dependencies
        run: yarn install --no-lockfile
      - name: Run Tests
        run: yarn test

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: 'test'

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28
          - ember-lts-4.8
          - ember-lts-4.12
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        # Using UV_USE_IO_URING to prevent embroider-safe and embroider-optimized tests from hanging
        # https://github.com/embroider-build/embroider/issues/1532
        run: UV_USE_IO_URING=0 ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
        working-directory: test-app

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test, floating, try-scenarios]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile
          yarn prepare
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
